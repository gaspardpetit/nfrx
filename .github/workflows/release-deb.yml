name: release-deb
on:
  release:
    types: [published]

jobs:
  build-deb:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64, arm64]

    env:
      DEB_BUILD_OPTIONS: nocheck

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.release.tag_name }}
          fetch-depth: 0
          fetch-tags: true

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'
          cache: true

      - name: Install deb tools
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential devscripts debhelper dh-golang golang-any lintian jq
          if [ "${{ matrix.arch }}" = "arm64" ]; then
            sudo apt-get install -y binutils-aarch64-linux-gnu
          fi

      - name: Compute version metadata (from release tag)
        id: meta
        shell: bash
        run: |
          set -euo pipefail
          TAG="${{ github.event.release.tag_name }}"
          DATE_ISO=$(date -u +%Y-%m-%dT%H:%M:%SZ)
          SHA=$(git rev-parse --short HEAD)
          UPSTREAM="${TAG#v}"
          UPSTREAM="${UPSTREAM//-/"~"}"
          DEBVER="${UPSTREAM}-1"
          {
            echo "tag=${TAG}"
            echo "debver=${DEBVER}"
            echo "version=${TAG}"
            echo "sha=${SHA}"
            echo "date=${DATE_ISO}"
          } >> "$GITHUB_OUTPUT"

      - name: Generate Debian changelog (append/create)
        shell: bash
        env:
          DEBFULLNAME: "CI"
          DEBEMAIL: "ci@example.invalid"
          DEB_VERSION: ${{ steps.meta.outputs.debver }}
          BUILD_KIND:  release
        run: |
          set -euo pipefail
          chmod +x .github/scripts/deb_changelog.sh
          .github/scripts/deb_changelog.sh
          head -40 debian/changelog || true

      - name: Commit changelog back to default branch
        shell: bash
        run: |
          set -euo pipefail
          TAG="${{ steps.meta.outputs.tag }}"
          BRANCH="${{ github.event.repository.default_branch }}"

          cp debian/changelog /tmp/debian.changelog

          # Reset working tree to allow switching branches
          git reset --hard

          git fetch origin "$BRANCH" --depth=1
          git checkout "$BRANCH"

          git pull --ff-only origin "$BRANCH" || true

          mkdir -p debian
          mv /tmp/debian.changelog debian/changelog

          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          if ! git diff --quiet -- debian/changelog; then
            git add debian/changelog
            git commit -m "chore(debian): update changelog for ${TAG} [skip ci]"
            git push origin "$BRANCH"
          else
            echo "No changelog changes to commit."
          fi

      - name: Build (binary package only)
        env:
          DEB_HOST_ARCH: ${{ matrix.arch }}
          GOOS: linux
          GOARCH: ${{ matrix.arch }}
          APP_VERSION: ${{ steps.meta.outputs.version }}
          APP_SHA:     ${{ steps.meta.outputs.sha }}
          APP_DATE:    ${{ steps.meta.outputs.date }}
        run: |
          dpkg-buildpackage -b -us -uc -a${{ matrix.arch }}
          mkdir -p out && mv ../*.deb out/

      - name: Lintian
        run: |
          lintian out/*.deb || true


      - name: Upload .deb to Release
        uses: softprops/action-gh-release@v2
        with:
          files: out/*.deb
          tag_name: ${{ github.event.release.tag_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
