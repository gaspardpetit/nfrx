permissions:
  contents: read
name: snapshot-deb
on:
  push:
    branches: ['main']
  pull_request:

jobs:
  build-deb-snapshot:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64, arm64]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - uses: actions/setup-go@v5
        with:
          go-version: '1.23'
          cache: true

      - name: Install deb tools
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential devscripts debhelper dh-golang golang-any
          if [ "${{ matrix.arch }}" = "arm64" ]; then
            sudo apt-get install -y binutils-aarch64-linux-gnu
          fi

      - name: Compute version metadata (tag vs snapshot)
        id: meta
        shell: bash
        run: |
          set -euo pipefail
          DATE_TAG=$(date -u +%Y-%m-%dT%H:%M:%SZ)
          DATE_DEB=$(date -u +%Y%m%d)
          SHA=$(git rev-parse --short HEAD)

          if [[ "${GITHUB_REF_TYPE:-}" == "tag" ]]; then
            # Tag build: use tag as upstream version; normalize for Debian
            RAW_TAG="${GITHUB_REF_NAME}"
            # Strip leading 'v' if present
            UPSTREAM="${RAW_TAG#v}"
            # Debian upstream version can't contain '-', map pre-releases like -rc1 to ~rc1
            UPSTREAM="${UPSTREAM//-/"~"}"
            DEBVER="${UPSTREAM}-1"
            VERSION="${RAW_TAG}"
            DESCRIBE="${RAW_TAG}"
            BUILD_KIND="release"
          else
            # Snapshot build: base on latest tag if available
            LAST_TAG="$(git describe --tags --abbrev=0 2>/dev/null || echo 0.0.0)"
            BASE_UPSTREAM="${LAST_TAG#v}"
            BASE_UPSTREAM="${BASE_UPSTREAM//-/"~"}"
            DEBVER="${BASE_UPSTREAM}~git${DATE_DEB}+${SHA}-1"
            DESCRIBE="$(git describe --tags --always --dirty)"
            VERSION="${DESCRIBE}"
            BUILD_KIND="snapshot"
          fi

          {
            echo "version=${VERSION}"
            echo "describe=${DESCRIBE}"
            echo "sha=${SHA}"
            echo "date=${DATE_TAG}"
            echo "debver=${DEBVER}"
            echo "build_kind=${BUILD_KIND}"
          } >> "$GITHUB_OUTPUT"

      - name: Generate Debian changelog (via script)
        shell: bash
        env:
          DEBFULLNAME: "CI"
          DEBEMAIL: "ci@example.invalid"
          DEB_VERSION: ${{ steps.meta.outputs.debver }}
          BUILD_KIND: ${{ steps.meta.outputs.build_kind }}
          DESCRIBE: ${{ steps.meta.outputs.describe }}
          BUILD_SHA: ${{ steps.meta.outputs.sha }}
          BUILD_DATE: ${{ steps.meta.outputs.date }}
        run: |
          # ensure we never depend on a committed changelog
          rm -f debian/changelog
          chmod +x .github/scripts/deb_changelog.sh
          .github/scripts/deb_changelog.sh

      - name: Build binary packages
        env:
          DEB_HOST_ARCH: ${{ matrix.arch }}
          GOOS: linux
          GOARCH: ${{ matrix.arch }}
          # Version metadata for -X flags used in rules
          APP_VERSION: ${{ steps.meta.outputs.version }}
          APP_SHA:     ${{ steps.meta.outputs.sha }}
          APP_DATE:    ${{ steps.meta.outputs.date }}
        run: |
          dpkg-buildpackage -b -us -uc -a${{ matrix.arch }}
          mkdir -p out && mv ../*.deb out/


      - uses: actions/upload-artifact@v4
        with:
          name: debs-${{ matrix.arch }}-${{ steps.meta.outputs.debver }}
          path: out/*.deb
          retention-days: 14
